// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc_checkResult.proto

#include "grpc_checkResult.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_grpc_5fcheckResult_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_grpc_CheckResults_grpc_5fcheckResult_2eproto;
namespace Xproject {
class grpc_CheckResultsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<grpc_CheckResults> _instance;
} _grpc_CheckResults_default_instance_;
class grpc_CommonCalResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<grpc_CommonCalResult> _instance;
} _grpc_CommonCalResult_default_instance_;
}  // namespace Xproject
static void InitDefaultsscc_info_grpc_CheckResults_grpc_5fcheckResult_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Xproject::_grpc_CheckResults_default_instance_;
    new (ptr) ::Xproject::grpc_CheckResults();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Xproject::grpc_CheckResults::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_grpc_CheckResults_grpc_5fcheckResult_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_grpc_CheckResults_grpc_5fcheckResult_2eproto}, {}};

static void InitDefaultsscc_info_grpc_CommonCalResult_grpc_5fcheckResult_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Xproject::_grpc_CommonCalResult_default_instance_;
    new (ptr) ::Xproject::grpc_CommonCalResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Xproject::grpc_CommonCalResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_grpc_CommonCalResult_grpc_5fcheckResult_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_grpc_CommonCalResult_grpc_5fcheckResult_2eproto}, {
      &scc_info_grpc_CheckResults_grpc_5fcheckResult_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpc_5fcheckResult_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_grpc_5fcheckResult_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpc_5fcheckResult_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpc_5fcheckResult_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Xproject::grpc_CheckResults, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Xproject::grpc_CheckResults, m_eresult_),
  PROTOBUF_FIELD_OFFSET(::Xproject::grpc_CheckResults, m_designvalue_),
  PROTOBUF_FIELD_OFFSET(::Xproject::grpc_CheckResults, m_calvalue_),
  PROTOBUF_FIELD_OFFSET(::Xproject::grpc_CheckResults, m_surplus_),
  PROTOBUF_FIELD_OFFSET(::Xproject::grpc_CheckResults, m_checktpye_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Xproject::grpc_CommonCalResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Xproject::grpc_CommonCalResult, m_checkresults_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Xproject::grpc_CheckResults)},
  { 10, -1, sizeof(::Xproject::grpc_CommonCalResult)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Xproject::_grpc_CheckResults_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Xproject::_grpc_CommonCalResult_default_instance_),
};

const char descriptor_table_protodef_grpc_5fcheckResult_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026grpc_checkResult.proto\022\010Xproject\"\275\001\n\021g"
  "rpc_CheckResults\0226\n\tm_eResult\030\001 \001(\0162#.Xp"
  "roject.grpc_CheckResults.eResult\022\025\n\rm_De"
  "signValue\030\002 \001(\001\022\022\n\nm_CalValue\030\003 \001(\001\022\021\n\tm"
  "_Surplus\030\004 \001(\001\022\023\n\013m_CheckTpye\030\005 \001(\005\"\035\n\007e"
  "Result\022\010\n\004PASS\020\000\022\010\n\004FAIL\020\001\"K\n\024grpc_Commo"
  "nCalResult\0223\n\016m_CheckResults\030\001 \003(\0132\033.Xpr"
  "oject.grpc_CheckResultsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpc_5fcheckResult_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_grpc_5fcheckResult_2eproto_sccs[2] = {
  &scc_info_grpc_CheckResults_grpc_5fcheckResult_2eproto.base,
  &scc_info_grpc_CommonCalResult_grpc_5fcheckResult_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpc_5fcheckResult_2eproto_once;
static bool descriptor_table_grpc_5fcheckResult_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpc_5fcheckResult_2eproto = {
  &descriptor_table_grpc_5fcheckResult_2eproto_initialized, descriptor_table_protodef_grpc_5fcheckResult_2eproto, "grpc_checkResult.proto", 311,
  &descriptor_table_grpc_5fcheckResult_2eproto_once, descriptor_table_grpc_5fcheckResult_2eproto_sccs, descriptor_table_grpc_5fcheckResult_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_grpc_5fcheckResult_2eproto::offsets,
  file_level_metadata_grpc_5fcheckResult_2eproto, 2, file_level_enum_descriptors_grpc_5fcheckResult_2eproto, file_level_service_descriptors_grpc_5fcheckResult_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_grpc_5fcheckResult_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_grpc_5fcheckResult_2eproto), true);
namespace Xproject {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* grpc_CheckResults_eResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_grpc_5fcheckResult_2eproto);
  return file_level_enum_descriptors_grpc_5fcheckResult_2eproto[0];
}
bool grpc_CheckResults_eResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr grpc_CheckResults_eResult grpc_CheckResults::PASS;
constexpr grpc_CheckResults_eResult grpc_CheckResults::FAIL;
constexpr grpc_CheckResults_eResult grpc_CheckResults::eResult_MIN;
constexpr grpc_CheckResults_eResult grpc_CheckResults::eResult_MAX;
constexpr int grpc_CheckResults::eResult_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void grpc_CheckResults::InitAsDefaultInstance() {
}
class grpc_CheckResults::_Internal {
 public:
};

grpc_CheckResults::grpc_CheckResults()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Xproject.grpc_CheckResults)
}
grpc_CheckResults::grpc_CheckResults(const grpc_CheckResults& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&m_designvalue_, &from.m_designvalue_,
    static_cast<size_t>(reinterpret_cast<char*>(&m_surplus_) -
    reinterpret_cast<char*>(&m_designvalue_)) + sizeof(m_surplus_));
  // @@protoc_insertion_point(copy_constructor:Xproject.grpc_CheckResults)
}

void grpc_CheckResults::SharedCtor() {
  ::memset(&m_designvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&m_surplus_) -
      reinterpret_cast<char*>(&m_designvalue_)) + sizeof(m_surplus_));
}

grpc_CheckResults::~grpc_CheckResults() {
  // @@protoc_insertion_point(destructor:Xproject.grpc_CheckResults)
  SharedDtor();
}

void grpc_CheckResults::SharedDtor() {
}

void grpc_CheckResults::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const grpc_CheckResults& grpc_CheckResults::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_grpc_CheckResults_grpc_5fcheckResult_2eproto.base);
  return *internal_default_instance();
}


void grpc_CheckResults::Clear() {
// @@protoc_insertion_point(message_clear_start:Xproject.grpc_CheckResults)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&m_designvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&m_surplus_) -
      reinterpret_cast<char*>(&m_designvalue_)) + sizeof(m_surplus_));
  _internal_metadata_.Clear();
}

const char* grpc_CheckResults::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Xproject.grpc_CheckResults.eResult m_eResult = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_m_eresult(static_cast<::Xproject::grpc_CheckResults_eResult>(val));
        } else goto handle_unusual;
        continue;
      // double m_DesignValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          m_designvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double m_CalValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          m_calvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double m_Surplus = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          m_surplus_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // int32 m_CheckTpye = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          m_checktpye_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* grpc_CheckResults::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Xproject.grpc_CheckResults)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Xproject.grpc_CheckResults.eResult m_eResult = 1;
  if (this->m_eresult() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_m_eresult(), target);
  }

  // double m_DesignValue = 2;
  if (!(this->m_designvalue() <= 0 && this->m_designvalue() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_m_designvalue(), target);
  }

  // double m_CalValue = 3;
  if (!(this->m_calvalue() <= 0 && this->m_calvalue() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_m_calvalue(), target);
  }

  // double m_Surplus = 4;
  if (!(this->m_surplus() <= 0 && this->m_surplus() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_m_surplus(), target);
  }

  // int32 m_CheckTpye = 5;
  if (this->m_checktpye() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_m_checktpye(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Xproject.grpc_CheckResults)
  return target;
}

size_t grpc_CheckResults::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Xproject.grpc_CheckResults)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double m_DesignValue = 2;
  if (!(this->m_designvalue() <= 0 && this->m_designvalue() >= 0)) {
    total_size += 1 + 8;
  }

  // double m_CalValue = 3;
  if (!(this->m_calvalue() <= 0 && this->m_calvalue() >= 0)) {
    total_size += 1 + 8;
  }

  // .Xproject.grpc_CheckResults.eResult m_eResult = 1;
  if (this->m_eresult() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_m_eresult());
  }

  // int32 m_CheckTpye = 5;
  if (this->m_checktpye() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_m_checktpye());
  }

  // double m_Surplus = 4;
  if (!(this->m_surplus() <= 0 && this->m_surplus() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void grpc_CheckResults::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Xproject.grpc_CheckResults)
  GOOGLE_DCHECK_NE(&from, this);
  const grpc_CheckResults* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<grpc_CheckResults>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Xproject.grpc_CheckResults)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Xproject.grpc_CheckResults)
    MergeFrom(*source);
  }
}

void grpc_CheckResults::MergeFrom(const grpc_CheckResults& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Xproject.grpc_CheckResults)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.m_designvalue() <= 0 && from.m_designvalue() >= 0)) {
    _internal_set_m_designvalue(from._internal_m_designvalue());
  }
  if (!(from.m_calvalue() <= 0 && from.m_calvalue() >= 0)) {
    _internal_set_m_calvalue(from._internal_m_calvalue());
  }
  if (from.m_eresult() != 0) {
    _internal_set_m_eresult(from._internal_m_eresult());
  }
  if (from.m_checktpye() != 0) {
    _internal_set_m_checktpye(from._internal_m_checktpye());
  }
  if (!(from.m_surplus() <= 0 && from.m_surplus() >= 0)) {
    _internal_set_m_surplus(from._internal_m_surplus());
  }
}

void grpc_CheckResults::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Xproject.grpc_CheckResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void grpc_CheckResults::CopyFrom(const grpc_CheckResults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Xproject.grpc_CheckResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool grpc_CheckResults::IsInitialized() const {
  return true;
}

void grpc_CheckResults::InternalSwap(grpc_CheckResults* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(m_designvalue_, other->m_designvalue_);
  swap(m_calvalue_, other->m_calvalue_);
  swap(m_eresult_, other->m_eresult_);
  swap(m_checktpye_, other->m_checktpye_);
  swap(m_surplus_, other->m_surplus_);
}

::PROTOBUF_NAMESPACE_ID::Metadata grpc_CheckResults::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void grpc_CommonCalResult::InitAsDefaultInstance() {
}
class grpc_CommonCalResult::_Internal {
 public:
};

grpc_CommonCalResult::grpc_CommonCalResult()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Xproject.grpc_CommonCalResult)
}
grpc_CommonCalResult::grpc_CommonCalResult(const grpc_CommonCalResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      m_checkresults_(from.m_checkresults_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Xproject.grpc_CommonCalResult)
}

void grpc_CommonCalResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_grpc_CommonCalResult_grpc_5fcheckResult_2eproto.base);
}

grpc_CommonCalResult::~grpc_CommonCalResult() {
  // @@protoc_insertion_point(destructor:Xproject.grpc_CommonCalResult)
  SharedDtor();
}

void grpc_CommonCalResult::SharedDtor() {
}

void grpc_CommonCalResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const grpc_CommonCalResult& grpc_CommonCalResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_grpc_CommonCalResult_grpc_5fcheckResult_2eproto.base);
  return *internal_default_instance();
}


void grpc_CommonCalResult::Clear() {
// @@protoc_insertion_point(message_clear_start:Xproject.grpc_CommonCalResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  m_checkresults_.Clear();
  _internal_metadata_.Clear();
}

const char* grpc_CommonCalResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Xproject.grpc_CheckResults m_CheckResults = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_m_checkresults(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* grpc_CommonCalResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Xproject.grpc_CommonCalResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Xproject.grpc_CheckResults m_CheckResults = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_m_checkresults_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_m_checkresults(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Xproject.grpc_CommonCalResult)
  return target;
}

size_t grpc_CommonCalResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Xproject.grpc_CommonCalResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Xproject.grpc_CheckResults m_CheckResults = 1;
  total_size += 1UL * this->_internal_m_checkresults_size();
  for (const auto& msg : this->m_checkresults_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void grpc_CommonCalResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Xproject.grpc_CommonCalResult)
  GOOGLE_DCHECK_NE(&from, this);
  const grpc_CommonCalResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<grpc_CommonCalResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Xproject.grpc_CommonCalResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Xproject.grpc_CommonCalResult)
    MergeFrom(*source);
  }
}

void grpc_CommonCalResult::MergeFrom(const grpc_CommonCalResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Xproject.grpc_CommonCalResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  m_checkresults_.MergeFrom(from.m_checkresults_);
}

void grpc_CommonCalResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Xproject.grpc_CommonCalResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void grpc_CommonCalResult::CopyFrom(const grpc_CommonCalResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Xproject.grpc_CommonCalResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool grpc_CommonCalResult::IsInitialized() const {
  return true;
}

void grpc_CommonCalResult::InternalSwap(grpc_CommonCalResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  m_checkresults_.InternalSwap(&other->m_checkresults_);
}

::PROTOBUF_NAMESPACE_ID::Metadata grpc_CommonCalResult::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Xproject
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Xproject::grpc_CheckResults* Arena::CreateMaybeMessage< ::Xproject::grpc_CheckResults >(Arena* arena) {
  return Arena::CreateInternal< ::Xproject::grpc_CheckResults >(arena);
}
template<> PROTOBUF_NOINLINE ::Xproject::grpc_CommonCalResult* Arena::CreateMaybeMessage< ::Xproject::grpc_CommonCalResult >(Arena* arena) {
  return Arena::CreateInternal< ::Xproject::grpc_CommonCalResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
