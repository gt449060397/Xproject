// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc_checkResult.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_grpc_5fcheckResult_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_grpc_5fcheckResult_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_grpc_5fcheckResult_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_grpc_5fcheckResult_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpc_5fcheckResult_2eproto;
namespace Xproject {
class grpc_CheckResults;
class grpc_CheckResultsDefaultTypeInternal;
extern grpc_CheckResultsDefaultTypeInternal _grpc_CheckResults_default_instance_;
class grpc_CommonCalResult;
class grpc_CommonCalResultDefaultTypeInternal;
extern grpc_CommonCalResultDefaultTypeInternal _grpc_CommonCalResult_default_instance_;
}  // namespace Xproject
PROTOBUF_NAMESPACE_OPEN
template<> ::Xproject::grpc_CheckResults* Arena::CreateMaybeMessage<::Xproject::grpc_CheckResults>(Arena*);
template<> ::Xproject::grpc_CommonCalResult* Arena::CreateMaybeMessage<::Xproject::grpc_CommonCalResult>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Xproject {

enum grpc_CheckResults_eResult : int {
  grpc_CheckResults_eResult_PASS = 0,
  grpc_CheckResults_eResult_FAIL = 1,
  grpc_CheckResults_eResult_grpc_CheckResults_eResult_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  grpc_CheckResults_eResult_grpc_CheckResults_eResult_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool grpc_CheckResults_eResult_IsValid(int value);
constexpr grpc_CheckResults_eResult grpc_CheckResults_eResult_eResult_MIN = grpc_CheckResults_eResult_PASS;
constexpr grpc_CheckResults_eResult grpc_CheckResults_eResult_eResult_MAX = grpc_CheckResults_eResult_FAIL;
constexpr int grpc_CheckResults_eResult_eResult_ARRAYSIZE = grpc_CheckResults_eResult_eResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* grpc_CheckResults_eResult_descriptor();
template<typename T>
inline const std::string& grpc_CheckResults_eResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, grpc_CheckResults_eResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function grpc_CheckResults_eResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    grpc_CheckResults_eResult_descriptor(), enum_t_value);
}
inline bool grpc_CheckResults_eResult_Parse(
    const std::string& name, grpc_CheckResults_eResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<grpc_CheckResults_eResult>(
    grpc_CheckResults_eResult_descriptor(), name, value);
}
// ===================================================================

class grpc_CheckResults :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Xproject.grpc_CheckResults) */ {
 public:
  grpc_CheckResults();
  virtual ~grpc_CheckResults();

  grpc_CheckResults(const grpc_CheckResults& from);
  grpc_CheckResults(grpc_CheckResults&& from) noexcept
    : grpc_CheckResults() {
    *this = ::std::move(from);
  }

  inline grpc_CheckResults& operator=(const grpc_CheckResults& from) {
    CopyFrom(from);
    return *this;
  }
  inline grpc_CheckResults& operator=(grpc_CheckResults&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const grpc_CheckResults& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const grpc_CheckResults* internal_default_instance() {
    return reinterpret_cast<const grpc_CheckResults*>(
               &_grpc_CheckResults_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(grpc_CheckResults& a, grpc_CheckResults& b) {
    a.Swap(&b);
  }
  inline void Swap(grpc_CheckResults* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline grpc_CheckResults* New() const final {
    return CreateMaybeMessage<grpc_CheckResults>(nullptr);
  }

  grpc_CheckResults* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<grpc_CheckResults>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const grpc_CheckResults& from);
  void MergeFrom(const grpc_CheckResults& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(grpc_CheckResults* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Xproject.grpc_CheckResults";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_grpc_5fcheckResult_2eproto);
    return ::descriptor_table_grpc_5fcheckResult_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef grpc_CheckResults_eResult eResult;
  static constexpr eResult PASS =
    grpc_CheckResults_eResult_PASS;
  static constexpr eResult FAIL =
    grpc_CheckResults_eResult_FAIL;
  static inline bool eResult_IsValid(int value) {
    return grpc_CheckResults_eResult_IsValid(value);
  }
  static constexpr eResult eResult_MIN =
    grpc_CheckResults_eResult_eResult_MIN;
  static constexpr eResult eResult_MAX =
    grpc_CheckResults_eResult_eResult_MAX;
  static constexpr int eResult_ARRAYSIZE =
    grpc_CheckResults_eResult_eResult_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  eResult_descriptor() {
    return grpc_CheckResults_eResult_descriptor();
  }
  template<typename T>
  static inline const std::string& eResult_Name(T enum_t_value) {
    static_assert(::std::is_same<T, eResult>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function eResult_Name.");
    return grpc_CheckResults_eResult_Name(enum_t_value);
  }
  static inline bool eResult_Parse(const std::string& name,
      eResult* value) {
    return grpc_CheckResults_eResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kMDesignValueFieldNumber = 2,
    kMCalValueFieldNumber = 3,
    kMEResultFieldNumber = 1,
    kMCheckTpyeFieldNumber = 5,
    kMSurplusFieldNumber = 4,
  };
  // double m_DesignValue = 2;
  void clear_m_designvalue();
  double m_designvalue() const;
  void set_m_designvalue(double value);
  private:
  double _internal_m_designvalue() const;
  void _internal_set_m_designvalue(double value);
  public:

  // double m_CalValue = 3;
  void clear_m_calvalue();
  double m_calvalue() const;
  void set_m_calvalue(double value);
  private:
  double _internal_m_calvalue() const;
  void _internal_set_m_calvalue(double value);
  public:

  // .Xproject.grpc_CheckResults.eResult m_eResult = 1;
  void clear_m_eresult();
  ::Xproject::grpc_CheckResults_eResult m_eresult() const;
  void set_m_eresult(::Xproject::grpc_CheckResults_eResult value);
  private:
  ::Xproject::grpc_CheckResults_eResult _internal_m_eresult() const;
  void _internal_set_m_eresult(::Xproject::grpc_CheckResults_eResult value);
  public:

  // int32 m_CheckTpye = 5;
  void clear_m_checktpye();
  ::PROTOBUF_NAMESPACE_ID::int32 m_checktpye() const;
  void set_m_checktpye(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_m_checktpye() const;
  void _internal_set_m_checktpye(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // double m_Surplus = 4;
  void clear_m_surplus();
  double m_surplus() const;
  void set_m_surplus(double value);
  private:
  double _internal_m_surplus() const;
  void _internal_set_m_surplus(double value);
  public:

  // @@protoc_insertion_point(class_scope:Xproject.grpc_CheckResults)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double m_designvalue_;
  double m_calvalue_;
  int m_eresult_;
  ::PROTOBUF_NAMESPACE_ID::int32 m_checktpye_;
  double m_surplus_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpc_5fcheckResult_2eproto;
};
// -------------------------------------------------------------------

class grpc_CommonCalResult :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Xproject.grpc_CommonCalResult) */ {
 public:
  grpc_CommonCalResult();
  virtual ~grpc_CommonCalResult();

  grpc_CommonCalResult(const grpc_CommonCalResult& from);
  grpc_CommonCalResult(grpc_CommonCalResult&& from) noexcept
    : grpc_CommonCalResult() {
    *this = ::std::move(from);
  }

  inline grpc_CommonCalResult& operator=(const grpc_CommonCalResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline grpc_CommonCalResult& operator=(grpc_CommonCalResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const grpc_CommonCalResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const grpc_CommonCalResult* internal_default_instance() {
    return reinterpret_cast<const grpc_CommonCalResult*>(
               &_grpc_CommonCalResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(grpc_CommonCalResult& a, grpc_CommonCalResult& b) {
    a.Swap(&b);
  }
  inline void Swap(grpc_CommonCalResult* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline grpc_CommonCalResult* New() const final {
    return CreateMaybeMessage<grpc_CommonCalResult>(nullptr);
  }

  grpc_CommonCalResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<grpc_CommonCalResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const grpc_CommonCalResult& from);
  void MergeFrom(const grpc_CommonCalResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(grpc_CommonCalResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Xproject.grpc_CommonCalResult";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_grpc_5fcheckResult_2eproto);
    return ::descriptor_table_grpc_5fcheckResult_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMCheckResultsFieldNumber = 1,
  };
  // repeated .Xproject.grpc_CheckResults m_CheckResults = 1;
  int m_checkresults_size() const;
  private:
  int _internal_m_checkresults_size() const;
  public:
  void clear_m_checkresults();
  ::Xproject::grpc_CheckResults* mutable_m_checkresults(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Xproject::grpc_CheckResults >*
      mutable_m_checkresults();
  private:
  const ::Xproject::grpc_CheckResults& _internal_m_checkresults(int index) const;
  ::Xproject::grpc_CheckResults* _internal_add_m_checkresults();
  public:
  const ::Xproject::grpc_CheckResults& m_checkresults(int index) const;
  ::Xproject::grpc_CheckResults* add_m_checkresults();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Xproject::grpc_CheckResults >&
      m_checkresults() const;

  // @@protoc_insertion_point(class_scope:Xproject.grpc_CommonCalResult)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Xproject::grpc_CheckResults > m_checkresults_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpc_5fcheckResult_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// grpc_CheckResults

// .Xproject.grpc_CheckResults.eResult m_eResult = 1;
inline void grpc_CheckResults::clear_m_eresult() {
  m_eresult_ = 0;
}
inline ::Xproject::grpc_CheckResults_eResult grpc_CheckResults::_internal_m_eresult() const {
  return static_cast< ::Xproject::grpc_CheckResults_eResult >(m_eresult_);
}
inline ::Xproject::grpc_CheckResults_eResult grpc_CheckResults::m_eresult() const {
  // @@protoc_insertion_point(field_get:Xproject.grpc_CheckResults.m_eResult)
  return _internal_m_eresult();
}
inline void grpc_CheckResults::_internal_set_m_eresult(::Xproject::grpc_CheckResults_eResult value) {
  
  m_eresult_ = value;
}
inline void grpc_CheckResults::set_m_eresult(::Xproject::grpc_CheckResults_eResult value) {
  _internal_set_m_eresult(value);
  // @@protoc_insertion_point(field_set:Xproject.grpc_CheckResults.m_eResult)
}

// double m_DesignValue = 2;
inline void grpc_CheckResults::clear_m_designvalue() {
  m_designvalue_ = 0;
}
inline double grpc_CheckResults::_internal_m_designvalue() const {
  return m_designvalue_;
}
inline double grpc_CheckResults::m_designvalue() const {
  // @@protoc_insertion_point(field_get:Xproject.grpc_CheckResults.m_DesignValue)
  return _internal_m_designvalue();
}
inline void grpc_CheckResults::_internal_set_m_designvalue(double value) {
  
  m_designvalue_ = value;
}
inline void grpc_CheckResults::set_m_designvalue(double value) {
  _internal_set_m_designvalue(value);
  // @@protoc_insertion_point(field_set:Xproject.grpc_CheckResults.m_DesignValue)
}

// double m_CalValue = 3;
inline void grpc_CheckResults::clear_m_calvalue() {
  m_calvalue_ = 0;
}
inline double grpc_CheckResults::_internal_m_calvalue() const {
  return m_calvalue_;
}
inline double grpc_CheckResults::m_calvalue() const {
  // @@protoc_insertion_point(field_get:Xproject.grpc_CheckResults.m_CalValue)
  return _internal_m_calvalue();
}
inline void grpc_CheckResults::_internal_set_m_calvalue(double value) {
  
  m_calvalue_ = value;
}
inline void grpc_CheckResults::set_m_calvalue(double value) {
  _internal_set_m_calvalue(value);
  // @@protoc_insertion_point(field_set:Xproject.grpc_CheckResults.m_CalValue)
}

// double m_Surplus = 4;
inline void grpc_CheckResults::clear_m_surplus() {
  m_surplus_ = 0;
}
inline double grpc_CheckResults::_internal_m_surplus() const {
  return m_surplus_;
}
inline double grpc_CheckResults::m_surplus() const {
  // @@protoc_insertion_point(field_get:Xproject.grpc_CheckResults.m_Surplus)
  return _internal_m_surplus();
}
inline void grpc_CheckResults::_internal_set_m_surplus(double value) {
  
  m_surplus_ = value;
}
inline void grpc_CheckResults::set_m_surplus(double value) {
  _internal_set_m_surplus(value);
  // @@protoc_insertion_point(field_set:Xproject.grpc_CheckResults.m_Surplus)
}

// int32 m_CheckTpye = 5;
inline void grpc_CheckResults::clear_m_checktpye() {
  m_checktpye_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 grpc_CheckResults::_internal_m_checktpye() const {
  return m_checktpye_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 grpc_CheckResults::m_checktpye() const {
  // @@protoc_insertion_point(field_get:Xproject.grpc_CheckResults.m_CheckTpye)
  return _internal_m_checktpye();
}
inline void grpc_CheckResults::_internal_set_m_checktpye(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  m_checktpye_ = value;
}
inline void grpc_CheckResults::set_m_checktpye(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_m_checktpye(value);
  // @@protoc_insertion_point(field_set:Xproject.grpc_CheckResults.m_CheckTpye)
}

// -------------------------------------------------------------------

// grpc_CommonCalResult

// repeated .Xproject.grpc_CheckResults m_CheckResults = 1;
inline int grpc_CommonCalResult::_internal_m_checkresults_size() const {
  return m_checkresults_.size();
}
inline int grpc_CommonCalResult::m_checkresults_size() const {
  return _internal_m_checkresults_size();
}
inline void grpc_CommonCalResult::clear_m_checkresults() {
  m_checkresults_.Clear();
}
inline ::Xproject::grpc_CheckResults* grpc_CommonCalResult::mutable_m_checkresults(int index) {
  // @@protoc_insertion_point(field_mutable:Xproject.grpc_CommonCalResult.m_CheckResults)
  return m_checkresults_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Xproject::grpc_CheckResults >*
grpc_CommonCalResult::mutable_m_checkresults() {
  // @@protoc_insertion_point(field_mutable_list:Xproject.grpc_CommonCalResult.m_CheckResults)
  return &m_checkresults_;
}
inline const ::Xproject::grpc_CheckResults& grpc_CommonCalResult::_internal_m_checkresults(int index) const {
  return m_checkresults_.Get(index);
}
inline const ::Xproject::grpc_CheckResults& grpc_CommonCalResult::m_checkresults(int index) const {
  // @@protoc_insertion_point(field_get:Xproject.grpc_CommonCalResult.m_CheckResults)
  return _internal_m_checkresults(index);
}
inline ::Xproject::grpc_CheckResults* grpc_CommonCalResult::_internal_add_m_checkresults() {
  return m_checkresults_.Add();
}
inline ::Xproject::grpc_CheckResults* grpc_CommonCalResult::add_m_checkresults() {
  // @@protoc_insertion_point(field_add:Xproject.grpc_CommonCalResult.m_CheckResults)
  return _internal_add_m_checkresults();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Xproject::grpc_CheckResults >&
grpc_CommonCalResult::m_checkresults() const {
  // @@protoc_insertion_point(field_list:Xproject.grpc_CommonCalResult.m_CheckResults)
  return m_checkresults_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Xproject

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::Xproject::grpc_CheckResults_eResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Xproject::grpc_CheckResults_eResult>() {
  return ::Xproject::grpc_CheckResults_eResult_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_grpc_5fcheckResult_2eproto
